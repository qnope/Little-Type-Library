var namespaceltl =
[
    [ "actions", "namespaceltl_1_1actions.html", "namespaceltl_1_1actions" ],
    [ "crtp", null, [
      [ "Comparable", "structltl_1_1crtp_1_1Comparable.html", null ]
    ] ],
    [ "detail", null, [
      [ "AddConverter", "structltl_1_1detail_1_1AddConverter.html", null ],
      [ "AddConverter< strong_type_t< T, Tag, ConverterIdentity, Skills... >, Converter >", "structltl_1_1detail_1_1AddConverter_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterIdentity_0083d12336e76832fe775f3794d82b6c3b.html", "structltl_1_1detail_1_1AddConverter_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterIdentity_0083d12336e76832fe775f3794d82b6c3b" ],
      [ "EmptyOptionalType", "structltl_1_1detail_1_1EmptyOptionalType.html", null ],
      [ "end_seq_exception", "structltl_1_1detail_1_1end__seq__exception.html", null ],
      [ "MultipleOf", "structltl_1_1detail_1_1MultipleOf.html", null ],
      [ "MultipleOf< strong_type_t< T, Tag, ConverterIdentity, Skills... >, Ratio >", "structltl_1_1detail_1_1MultipleOf_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterIdentity_00_0a8d9b11f1df2741a8a63b187719c32f9.html", "structltl_1_1detail_1_1MultipleOf_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterIdentity_00_0a8d9b11f1df2741a8a63b187719c32f9" ],
      [ "MultipleOf< strong_type_t< T, Tag, ConverterMultiplier< RatioBase >, Skills... >, RatioToApply >", "structltl_1_1detail_1_1MultipleOf_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterMultiplier_3_21d46bfdbe1bffe3afdb4ed18753e2ff.html", "structltl_1_1detail_1_1MultipleOf_3_01strong__type__t_3_01T_00_01Tag_00_01ConverterMultiplier_3_21d46bfdbe1bffe3afdb4ed18753e2ff" ],
      [ "scanl_wrapper", "structltl_1_1detail_1_1scanl__wrapper.html", "structltl_1_1detail_1_1scanl__wrapper" ],
      [ "strong_type_t", "classltl_1_1detail_1_1strong__type__t.html", "classltl_1_1detail_1_1strong__type__t" ]
    ] ],
    [ "fast", null, [
      [ "all_of", "structltl_1_1fast_1_1all__of.html", null ],
      [ "all_of< List< Xs... >, Predicate >", "structltl_1_1fast_1_1all__of_3_01List_3_01Xs_8_8_8_01_4_00_01Predicate_01_4.html", null ],
      [ "any_of", "structltl_1_1fast_1_1any__of.html", null ],
      [ "any_of< List< Xs... >, Predicate >", "structltl_1_1fast_1_1any__of_3_01List_3_01Xs_8_8_8_01_4_00_01Predicate_01_4.html", null ],
      [ "apply", "structltl_1_1fast_1_1apply.html", null ],
      [ "apply< List< Types... >, F >", "structltl_1_1fast_1_1apply_3_01List_3_01Types_8_8_8_01_4_00_01F_01_4.html", "structltl_1_1fast_1_1apply_3_01List_3_01Types_8_8_8_01_4_00_01F_01_4" ],
      [ "at", "structltl_1_1fast_1_1at.html", null ],
      [ "at< Index, List< Ts... >, std::index_sequence< Is... > >", "structltl_1_1fast_1_1at_3_01Index_00_01List_3_01Ts_8_8_8_01_4_00_01std_1_1index__sequence_3_01Is_8_8_8_01_4_01_4.html", "structltl_1_1fast_1_1at_3_01Index_00_01List_3_01Ts_8_8_8_01_4_00_01std_1_1index__sequence_3_01Is_8_8_8_01_4_01_4" ],
      [ "bind1st", "structltl_1_1fast_1_1bind1st.html", "structltl_1_1fast_1_1bind1st" ],
      [ "bind2nd", "structltl_1_1fast_1_1bind2nd.html", "structltl_1_1fast_1_1bind2nd" ],
      [ "conditional", "structltl_1_1fast_1_1conditional.html", "structltl_1_1fast_1_1conditional" ],
      [ "conditional< true >", "structltl_1_1fast_1_1conditional_3_01true_01_4.html", "structltl_1_1fast_1_1conditional_3_01true_01_4" ],
      [ "contains", "structltl_1_1fast_1_1contains.html", null ],
      [ "contains< T, List< Ts... > >", "structltl_1_1fast_1_1contains_3_01T_00_01List_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "contains_if", "structltl_1_1fast_1_1contains__if.html", null ],
      [ "contains_if< P, List< Ts... > >", "structltl_1_1fast_1_1contains__if_3_01P_00_01List_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "count", "structltl_1_1fast_1_1count.html", null ],
      [ "count< T, List< Ts... > >", "structltl_1_1fast_1_1count_3_01T_00_01List_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "count_if", "structltl_1_1fast_1_1count__if.html", null ],
      [ "count_if< P, List< Ts... > >", "structltl_1_1fast_1_1count__if_3_01P_00_01List_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "filter", "classltl_1_1fast_1_1filter.html", null ],
      [ "filter< List< Xs... >, Predicate >", "classltl_1_1fast_1_1filter_3_01List_3_01Xs_8_8_8_01_4_00_01Predicate_01_4.html", "classltl_1_1fast_1_1filter_3_01List_3_01Xs_8_8_8_01_4_00_01Predicate_01_4" ],
      [ "find", "classltl_1_1fast_1_1find.html", null ],
      [ "find< T, List< Ts... >, First >", "classltl_1_1fast_1_1find_3_01T_00_01List_3_01Ts_8_8_8_01_4_00_01First_01_4.html", null ],
      [ "find_if", "classltl_1_1fast_1_1find__if.html", null ],
      [ "find_if< P, List< Ts... >, First >", "classltl_1_1fast_1_1find__if_3_01P_00_01List_3_01Ts_8_8_8_01_4_00_01First_01_4.html", null ],
      [ "function_to_metafunction", "structltl_1_1fast_1_1function__to__metafunction.html", "structltl_1_1fast_1_1function__to__metafunction" ],
      [ "is_unique", "structltl_1_1fast_1_1is__unique.html", null ],
      [ "is_unique< List< Ts... > >", "structltl_1_1fast_1_1is__unique_3_01List_3_01Ts_8_8_8_01_4_01_4.html", null ],
      [ "none_of", "structltl_1_1fast_1_1none__of.html", null ],
      [ "none_of< List< Xs... >, Predicate >", "structltl_1_1fast_1_1none__of_3_01List_3_01Xs_8_8_8_01_4_00_01Predicate_01_4.html", null ],
      [ "qualified_type_list", "structltl_1_1fast_1_1qualified__type__list.html", null ],
      [ "qualified_type_list< const List< Types... > & >", "structltl_1_1fast_1_1qualified__type__list_3_01const_01List_3_01Types_8_8_8_01_4_01_6_01_4.html", "structltl_1_1fast_1_1qualified__type__list_3_01const_01List_3_01Types_8_8_8_01_4_01_6_01_4" ],
      [ "qualified_type_list< const List< Types... > >", "structltl_1_1fast_1_1qualified__type__list_3_01const_01List_3_01Types_8_8_8_01_4_01_4.html", "structltl_1_1fast_1_1qualified__type__list_3_01const_01List_3_01Types_8_8_8_01_4_01_4" ],
      [ "qualified_type_list< List< Types... > & >", "structltl_1_1fast_1_1qualified__type__list_3_01List_3_01Types_8_8_8_01_4_01_6_01_4.html", "structltl_1_1fast_1_1qualified__type__list_3_01List_3_01Types_8_8_8_01_4_01_6_01_4" ],
      [ "qualified_type_list< List< Types... > >", "structltl_1_1fast_1_1qualified__type__list_3_01List_3_01Types_8_8_8_01_4_01_4.html", "structltl_1_1fast_1_1qualified__type__list_3_01List_3_01Types_8_8_8_01_4_01_4" ],
      [ "rename", "structltl_1_1fast_1_1rename.html", null ],
      [ "rename< List< Ts... >, X >", "structltl_1_1fast_1_1rename_3_01List_3_01Ts_8_8_8_01_4_00_01X_01_4.html", "structltl_1_1fast_1_1rename_3_01List_3_01Ts_8_8_8_01_4_00_01X_01_4" ],
      [ "type_list", "structltl_1_1fast_1_1type__list.html", null ],
      [ "unique", "classltl_1_1fast_1_1unique.html", null ],
      [ "unique< List< Xs... > >", "classltl_1_1fast_1_1unique_3_01List_3_01Xs_8_8_8_01_4_01_4.html", "classltl_1_1fast_1_1unique_3_01List_3_01Xs_8_8_8_01_4_01_4" ]
    ] ],
    [ "AbstractRange", "classltl_1_1AbstractRange.html", "classltl_1_1AbstractRange" ],
    [ "AllComparable", "structltl_1_1AllComparable.html", null ],
    [ "AllOf", "classltl_1_1AllOf.html", null ],
    [ "any_trait_t", "structltl_1_1any__trait__t.html", "structltl_1_1any__trait__t" ],
    [ "AnyOf", "classltl_1_1AnyOf.html", null ],
    [ "array_to_index_sequence", "structltl_1_1array__to__index__sequence.html", null ],
    [ "array_to_index_sequence< array, std::index_sequence< Is... > >", "structltl_1_1array__to__index__sequence_3_01array_00_01std_1_1index__sequence_3_01Is_8_8_8_01_4_01_4.html", "structltl_1_1array__to__index__sequence_3_01array_00_01std_1_1index__sequence_3_01Is_8_8_8_01_4_01_4" ],
    [ "as_byte", "structltl_1_1as__byte.html", "structltl_1_1as__byte" ],
    [ "AsPointer", "structltl_1_1AsPointer.html", "structltl_1_1AsPointer" ],
    [ "AsPointer< T & >", "structltl_1_1AsPointer_3_01T_01_6_01_4.html", "structltl_1_1AsPointer_3_01T_01_6_01_4" ],
    [ "BaseIterator", "classltl_1_1BaseIterator.html", "classltl_1_1BaseIterator" ],
    [ "basic_readonly_streambuf", "classltl_1_1basic__readonly__streambuf.html", "classltl_1_1basic__readonly__streambuf" ],
    [ "basic_writeonly_streambuf", "classltl_1_1basic__writeonly__streambuf.html", "classltl_1_1basic__writeonly__streambuf" ],
    [ "bool_t", "structltl_1_1bool__t.html", "structltl_1_1bool__t" ],
    [ "build_from_type_listImpl", "structltl_1_1build__from__type__listImpl.html", null ],
    [ "build_from_type_listImpl< T, type_list_t< Ts... > >", "structltl_1_1build__from__type__listImpl_3_01T_00_01type__list__t_3_01Ts_8_8_8_01_4_01_4.html", "structltl_1_1build__from__type__listImpl_3_01T_00_01type__list__t_3_01Ts_8_8_8_01_4_01_4" ],
    [ "CompileError", "structltl_1_1CompileError.html", null ],
    [ "ConverterIdentity", "structltl_1_1ConverterIdentity.html", null ],
    [ "ConverterMultiplier", "structltl_1_1ConverterMultiplier.html", null ],
    [ "decay_reference_wrapper", "structltl_1_1decay__reference__wrapper.html", "structltl_1_1decay__reference__wrapper" ],
    [ "decay_reference_wrapper< std::reference_wrapper< T > >", "structltl_1_1decay__reference__wrapper_3_01std_1_1reference__wrapper_3_01T_01_4_01_4.html", "structltl_1_1decay__reference__wrapper_3_01std_1_1reference__wrapper_3_01T_01_4_01_4" ],
    [ "decrement_tag_t", "structltl_1_1decrement__tag__t.html", null ],
    [ "Decrementable", "structltl_1_1Decrementable.html", null ],
    [ "deferrable_finally", "structltl_1_1deferrable__finally.html", "structltl_1_1deferrable__finally" ],
    [ "empty_t", "structltl_1_1empty__t.html", null ],
    [ "EqualityComparable", "structltl_1_1EqualityComparable.html", null ],
    [ "error_tag_t", "structltl_1_1error__tag__t.html", null ],
    [ "expected", "classltl_1_1expected.html", null ],
    [ "finally", "structltl_1_1finally.html", "structltl_1_1finally" ],
    [ "fix", "structltl_1_1fix.html", null ],
    [ "immutable_t", "structltl_1_1immutable__t.html", "structltl_1_1immutable__t" ],
    [ "increment_tag_t", "structltl_1_1increment__tag__t.html", null ],
    [ "Incrementable", "structltl_1_1Incrementable.html", null ],
    [ "is_chainable_operation", "structltl_1_1is__chainable__operation.html", null ],
    [ "is_optional< ltl::optional< T > >", "structltl_1_1is__optional_3_01ltl_1_1optional_3_01T_01_4_01_4.html", null ],
    [ "is_smart_pointer", "structltl_1_1is__smart__pointer.html", null ],
    [ "is_smart_pointer< std::shared_ptr< T > >", "structltl_1_1is__smart__pointer_3_01std_1_1shared__ptr_3_01T_01_4_01_4.html", null ],
    [ "is_smart_pointer< std::unique_ptr< T > >", "structltl_1_1is__smart__pointer_3_01std_1_1unique__ptr_3_01T_01_4_01_4.html", null ],
    [ "is_tuple< TypedTuple< Ts... > >", "structltl_1_1is__tuple_3_01TypedTuple_3_01Ts_8_8_8_01_4_01_4.html", null ],
    [ "is_weak_ptr", "structltl_1_1is__weak__ptr.html", null ],
    [ "is_weak_ptr< std::weak_ptr< T > >", "structltl_1_1is__weak__ptr_3_01std_1_1weak__ptr_3_01T_01_4_01_4.html", null ],
    [ "IteratorOperationByIterating", "structltl_1_1IteratorOperationByIterating.html", "structltl_1_1IteratorOperationByIterating" ],
    [ "IteratorOperationWithDistance", "structltl_1_1IteratorOperationWithDistance.html", "structltl_1_1IteratorOperationWithDistance" ],
    [ "IteratorSimpleComparator", "structltl_1_1IteratorSimpleComparator.html", "structltl_1_1IteratorSimpleComparator" ],
    [ "movable_any", "classltl_1_1movable__any.html", "classltl_1_1movable__any" ],
    [ "mutex", "classltl_1_1mutex.html", "classltl_1_1mutex" ],
    [ "NoneOf", "classltl_1_1NoneOf.html", null ],
    [ "NullableFunction", "structltl_1_1NullableFunction.html", "structltl_1_1NullableFunction" ],
    [ "number_t", "structltl_1_1number__t.html", null ],
    [ "Ok", "structltl_1_1Ok.html", null ],
    [ "optional", "classltl_1_1optional.html", null ],
    [ "optional_type", "structltl_1_1optional__type.html", "structltl_1_1optional__type" ],
    [ "optional_type< detail::EmptyOptionalType >", "structltl_1_1optional__type_3_01detail_1_1EmptyOptionalType_01_4.html", null ],
    [ "OStreamable", "structltl_1_1OStreamable.html", "structltl_1_1OStreamable" ],
    [ "overloader", "structltl_1_1overloader.html", "structltl_1_1overloader" ],
    [ "OwningRange", "classltl_1_1OwningRange.html", "classltl_1_1OwningRange" ],
    [ "Predicate", "structltl_1_1Predicate.html", null ],
    [ "qualifier_t", "structltl_1_1qualifier__t.html", null ],
    [ "Range", "classltl_1_1Range.html", "classltl_1_1Range" ],
    [ "recursive_variant", "classltl_1_1recursive__variant.html", null ],
    [ "remove_cvref", "structltl_1_1remove__cvref.html", null ],
    [ "to_deque_t", "structltl_1_1to__deque__t.html", null ],
    [ "to_list_t", "structltl_1_1to__list__t.html", null ],
    [ "to_vector_t", "structltl_1_1to__vector__t.html", null ],
    [ "tuple_size", "classltl_1_1tuple__size.html", null ],
    [ "tuple_t", "structltl_1_1tuple__t.html", "structltl_1_1tuple__t" ],
    [ "type_t", "structltl_1_1type__t.html", "structltl_1_1type__t" ],
    [ "TypedTuple", "structltl_1_1TypedTuple.html", "structltl_1_1TypedTuple" ],
    [ "value_tag_t", "structltl_1_1value__tag__t.html", null ],
    [ "WithFunction", "structltl_1_1WithFunction.html", "structltl_1_1WithFunction" ]
];